-[[
  Algorithms and data structures learned in Lua
  Step-by-step optimization of the N-Queen problem
  Information Technology Bureau, Kyodo News Agency, General Incorporated Association Corporation, Iichiro Suzuki (suzuki.iichiro@kyodonews.jp)
  
  Java / C / Lua / Bash version
  https://github.com/suzukiiichiro/N-Queen
 
  About Eight Queen
  https://en.wikipedia.org/wiki/Eight Queen
 
  What is the N-Queens problem
     The N-Queen problem is that “8 columns × 8 rows of chess boards work with 8 queens,
     "I arrange it so that it does not hit" "queen (N) of 8 queen problem, how large
     The problem is whether you can find a solution up to N.
     The queen refers to the queen used in chess, and in the chessboard, vertically and horizontally,
     It is a piece that can go as far as it goes diagonally, and it combines “flyers and horns” in Japanese Shogi.
     It is a movement that 8-Queens on a typical chess board consisting of 8 columns x 8 lines
     The solution of the problem is that the total number of solutions is 92. Because it is a relatively simple problem,
     It is often taken as a lesson.
     If it is about 8-Queens problem, even if "forced search" by human power or program
     The solution can be obtained, but when N becomes large, the solution explodes at a stretch, and in practical time
     It can not be solved.
     If all solutions are currently known, do not use 264 CPU x 20 days at the University of Electro-Communications in 2004
     In the world, it is the best in the world, then at Nizza University in 2005 n = 25, in 2016
     We have succeeded in finding a solution of n = 27 at Sden University of Technology.
 
  table of contents
   N queen problem
   1. Brute force (forced search) NQueen 1 ()
   2. Placement flag (constraint test acceleration) NQueen 3 ()
   3. Backtracking NQueen 2 () 00:20:48
   4. Symmetry cancellation method (rotation and oblique axis) NQueen 4 () 00:24:31
   5. Symmetry cancellation + pruning NQueen 5 () 00:22:57
   6. Bitmap NQueen 6 () 00:09:05
   7. Bit map + symmetry cancellation method NQueen 7 () 00: 23: 09
   8. Bitmap + Symmetry + Pruning NQueen 8 () 00:07:33
   9. Sorting according to the position of the queen (BOUND 1) NQueen 9 () 00: 12: 20
 10. Sorting according to the position of the queen (BOUND1, BOUND2) NQueen 10 () 00: 12: 18
 11. Pruning NQueen 11 () 00: 03: 32
 12. Optimization NQueen 12 () 00: 02: 13


  1. Brute force
 Systematically count all possible solution candidates, and each solution candidate
   How to check
   (※) It generates the combination which enumerates the combination which arranges one royal note in each line recursively
   It does not mean that the 8 kings problem is solved

  Execution result
  :
  :
  7 7 7 7 7 7 6 7: 16777208
  7 7 7 7 7 7 7 0: 16777209
  7 7 7 7 7 7 7 1: 16777210
  7 7 7 7 7 7 7 2: 16777211
  7 7 7 7 7 7 7 3: 16777212
  7 7 7 7 7 7 7 4: 16777213
  7 7 7 7 7 7 7 5: 16777214
  7 7 7 7 7 7 7 6: 16777215
  7 7 7 7 7 7 7 7: 16777216


  2. Placement flag (constraint test acceleration)
   Do not check after completion of pattern generation, but satisfy constraints on the way
   If it is obvious that there is no need for subsequent pattern generation.
  "I'm going to advance as much as I can, but I can't go further than that."
  A method of examining all the hands with the idea that only one move back and start over when things are understood.
  (*) Even if the combination branch arrangement is performed for one matrix in each matrix, even if the branch branch scan is performed recursively,
  It is only a list of combinations, and it does not mean that the 8 kings problem is solved.

  Execution result
  :
  :
  7 6 5 4 2 0 3 1: 40310
  7 6 5 4 2 1 0 3: 40311
  7 6 5 4 2 1 3 0: 40312
  7 6 5 4 2 3 0 1: 40313
  7 6 5 4 2 3 1 0: 40314
  7 6 5 4 3 0 1 2: 40315
  7 6 5 4 3 0 2 1: 40316
  7 6 5 4 3 1 0 2: 40317
  7 6 5 4 3 1 2 0: 40318
  7 6 5 4 3 2 0 1: 40319
  7 6 5 4 3 2 1 0: 40320


  3. Back track
   Prepare a flag indicating whether there is a queen on each column, diagonally, and meet the constraints along the way
   If it is obvious not to do so, no further pattern generation will be performed.
   Speedup is achieved by preparing a flag whether or not there is a queen on each row and diagonal line.
   So far, it is a list of combinations that do not overlap in the row and column directions.
   Can take a piece in a diagonal direction, so there is one queen on every diagonal line
   The tree can not be visited by all the leaves in the depth-first search by adding the limit that can only be placed.
   It is possible to turn back the tree when it turns out that there is no solution after getting down.


 Execution result
 N: Total Unique hh: mm: ss
 2: 0 0 00:00:00
 3: 0 0 00:00:00
 4: 2 0 00:00:00
 5: 10 0 00:00:00
 6: 4 0 00:00:00
 7: 40 0 ​​00:00:00
 8: 92 0 00:00:00
 9: 352 0 00:00:00
10: 724 0 00:00:00
11: 2680 0 00:00:00
12: 14200 0 00:00:00
13: 73712 0 00:00: 01
14: 365596 0 00:00:04
15: 2279184 0 00:00: 26
16: 14772512 0 00: 02: 55
17: 95815104 0 00: 20: 48


  4. Symmetry cancellation method
      One solution is to rotate the board 90 degrees, 180 degrees, 270 degrees, and the sum of their mirror images
      There are eight symmetric solutions. A method of removing an opposite solution and finding a solution from a unique solution.
  
  ■ How to judge unique solutions
    One solution obtained by the whole search is essentially changed by rotation, inversion, etc.
  If there is something that is isomorphic to another solution due to no transformation, do not make it another solution
  The solution obtained by counting solutions is called "unique solution". In other words, a unique solution is
  Group among all solutions that become isomorphic by transformation by rotation, inversion, etc.
  It means that.
  
    Therefore, a unique solution is focused on its "number only", and this solution is a unique solution.
  There is no definite way to judge that the solution of is not a unique solution. Is it a unique solution?
  Judgment of whether or not each person is free to define only for the purpose of counting the number of unique solutions
  It becomes. Of course, the number of unique solutions themselves is
  Sorry.
  
    Well, since the N queen problem is formed by a square board, a conversion putter by rotation and inversion
  There are 8 ways of So simply "total number of answers = unique number of answers x 8"
  I don `t go. The number of elements in one group is not always eight. Of N = 5
  In the example below, there are two elements and eight elements.
 
 
  The total solution for N = 5 is 10, and the unique solution is 2.
  
  Group 1: One unique solution
  ---Q--Q---
  Q--------Q
  --Q----Q--
  ----Q Q----
  -Q------Q-
  
  Group 2: Unique solution 2
  ----Q Q------Q----Q----Q--Q---Q-------Q
  --Q----Q--Q-------Q-Q-----Q----Q--Q-----
  Q--------Q---Q--Q------Q Q-----Q------Q-
  ---Q--Q----Q-----Q---Q---Q-----Q Q----
  -Q------Q-----Q Q----Q-------Q--Q----Q--
 
  
    Then we define it to determine the unique solution, but define it as follows
  I'm going to Find out where the queen of each row is from the right, down from the top row
  List the lines in order. And it will be the minimum value when it is viewed as an N-digit number
  Is counted as a unique solution. In addition, the number of N digits is referred to as "unique judgment value" thereafter.
  I will call it.
  
  ----Q 0
  --Q--2
  Q----4 ---> 0 2 4 1 3 (unique judgment value)
  ---Q-1
  -Q---3
  
  
    Determine if one solution (original) obtained by search is a unique solution
  "To try 8 different conversions, among which the original unique judgment value is the smallest?
  It will be "investigate". However, speaking from the conclusion, it can not be a unique solution
  By incorporating certain prunes that truncate while searching for clear patterns, three ways
  It is possible to judge the unique solution just by trying the conversion.
   
  
  ■ Find the number of unique solutions
    First we focus on the queen position in the top row. If the position is in the left half area, you
  It can not be a Neek solution. Because the unique size of the pattern obtained by flipping left and right
  This is because the fixed value is definitely smaller. Also, if N was odd and in the middle
  It will be. This too can not be a unique solution. Because if it was in the middle,
  In order to be unique, the position of the queen on at least the other three outer sides is also
  It has to be in the middle, and it is impossible because it corresponds to each other's effective muscles.
 
 
  ************************************************** *************************
  The position of the queen in the top row is limited to the right area except the center. (Where N 2 2)
  ************************************************** *************************
  
    Next, consider the case where there is a queen at the far right (upper right corner). The other three
  Because you can not put the queen in the corner of (because it is a good muscle), whether it is a unique solution
  The only way to determine this is to compare it with the pattern inverted on the oblique axis passing from the upper right corner to the lower left corner.
  You In short,
  
  [The position of the second queen from the top from the right]
  [The position of the second row of queens from the top from the top]
  
 
  It can be determined just by comparing. This is because these two values ​​will never be the same.
  
        3 0
        ↓
  ----Q 0 0
  -Q---← 3
  -----The second queen from the top is the fourth from the right.
  ---Q-The second row from the right is the fourth queen position from the top.
  -----However, this is impossible because they are mutually effective.
  
    After all, it is better to put a pruning that prohibits the placement to X in the following figure during recursive search.
  It is guaranteed that every solution is unique.
  
  ----X Q
  -Q--X-
  ----X-
  ----X-
  ------
  ------
  
    Now consider the case where there is a queen other than the right end. Original is a unique solution
  For this reason, the placement to X in the figure below is prohibited first. Therefore, put that pruning first
  You
  
  X X---Q X X
  X------X
  --------
  --------
  --------
  --------
  X------X
  X X----X X
  
    If you follow the queen's dominant source next time, it is possible that the original is not a unique solution
  There is a sex only if there is a queen somewhere in the positions A, B and C in the figure below. Follow
  Therefore, it is good to examine only three conversion patterns of 90 degree rotation, 180 degree rotation and 270 degree rotation
  It becomes.
  
  X x x x x Q X X
  X---x x x X
  C--x-x-x
  --x--x--
  -x---x--
  x----x-A
  X----x-X
  X X B--x X X
 
 
  ■ Development from unique solutions to all solutions
    The previous considerations were to find the number of unique solutions. To find the total number of solutions
  We need to prune to find a unique solution and do a full search. Therefore
  It will cost you search time. Therefore, from the number of unique solutions,
  I can think of an attempt to lead it. This is a pattern search by left-right inversion
  It is an expanded version of the idea of ​​omitting the and finally doubling the result. And that
  To realize this, "How many elements of a group a certain unique solution belongs to?"
  It is necessary to consider.
  
    First, consider the unique solution where the queen is in the upper right corner. The pattern inverted on the oblique axis
  It is impossible to become isomorphic to the original (× 2), and the other three queens in the upper right corner
  The number of elements of the group to which this unique solution belongs is required because it can be mapped to a corner (× 4)
  There will be 8 pieces (= 2 × 4).
  
    Second, it will be a bit more complicated if the queen is outside the upper right corner, but I will simplify the discussion
  In order to make sure
 
  TOTAL = (COUNT 8 * 8) + (COUNT 4 * 4) + (COUNT 2 * 2);
    (1) If it is rotated by 90 degrees and becomes the same as the original, then it is further rotated by 90 degrees.
     Even if it is rotated by
     It becomes the same type as Zinal.
 
     COUNT 2 * 2
  
    (2) If it is rotated by 90 degrees and it differs from the original, the original must be rotated by 270 degrees
     It is different from However, when rotated 180 degrees, it may be the same as the original
     It is possible.
 
     COUNT 4 * 4
  
    (3) The number of elements of the group to which the unique solution corresponding to (1) belongs is a pattern in which the left and right are inverted.
        In addition there are only two. The number of elements of the group to which the unique solution corresponding to (2) belongs is
        When rotating 180 degrees and becoming the same type, 4 pieces (horizontal flip x vertical rotation), and even rotating 180 degrees
        If different from the original will be eight. (Horizontal flip × vertical rotation × vertical flip)
  
     COUNT 8 * 8
 
    From the above, we investigate which kind of unique solution each one corresponds to
  In this way, the total solution number can be derived by calculation. Pruning will shorten the search time
  It is no longer necessary to
  
    UNIQUE COUNT2 + COUNT4 + COUNT8
    TOTAL (COUNT 2 * 2) + (COUNT 4 * 4) + (COUNT 8 * 8)
 
  If you realize these, execution speed will be slower than the previous NQueen 3 ().
  This is because processing is added to reverse the symmetry, inversion, and oblique axes.
  However, by performing this process, NQueen 5 () will further accelerate the processing speed.
  It is speeding up dramatically. For that purpose, this algorithm implementation is necessary.
 

 Execution result luajit
 N: Total Unique hh: mm: ss
 2: 0 0 00:00:00
 3: 0 0 00:00:00
 4: 2 1 00:00:00
 5: 10 2 00:00:00
 6: 4 1 00:00:00
 7: 40 6 00:00:00
 8: 92 12 00:00:00
 9: 352 46 00:00:00
10: 724 92 00:00:00
11: 2680 341 00:00:00
12: 14200 1787 00:00: 01
13: 73712 9233 00:00:00
14: 365596 45752 00:00:05
15: 2279184 285053 00:00: 31
16: 14772512 1846955 00: 03: 25
17: 95815104 11977939 00: 24: 31


 * 5. Symmetry cancellation + pruning
 * Compare source comments for simplicity.
 * Although simple, the effect of pruning is enormous.
 *

 Execution result
 N: Total Unique hh: mm: ss
 2: 0 0 00:00:00
 3: 0 0 00:00:00
 4: 2 1 00:00:00
 5: 10 2 00:00:00
 6: 4 1 00:00:00
 7: 40 6 00:00:00
 8: 92 12 00:00:00
 9: 352 46 00:00:00
10: 724 92 00:00:00
11: 2680 341 00:00:00
12: 14200 1787 00:00:00
13: 73712 9233 00:00: 01
14: 365596 45752 00:00:05
15: 2279184 285053 00:00: 29
16: 14772512 1846955 00: 03: 14
17: 95815104 11197739 00: 22: 57


  6. Backtrack + Bitmap
  
    Use Bitwise operations to pack and process acceleration states into bitmaps
    20 to 30 times faster than a simple backtrack
  
  With bitmaps, data can be moved at high speed by shifting.
   In the flag array, it takes O (N) time to move data, but in the case of bitmap, O (1)
   Instead of preparing 2 * N-1 elements in the diagonal direction as in the flag array, fill with N bits.
   Minutes.
 
  Put assignable bit string into flags, and take out bits in order with -flags & flags.
  20-30 times faster than back track.
  
  ======================
  Way of thinking 1
  ======================
 
  An N × N chess board is represented by N bit fields, and one row state is
  Corresponds to one bit field. (Turn on the bit where the queen is placed
  Do)
  And backtracking is "downward" in order from the 0th bit field.
  Turn on one bit position of any one and proceed.
 
  
 ------Q--00000100 0th bit field
 ---Q----00010000 First bit field
 -------Q-0000010 Second bit field
 Q-------10000000 third bit field
 --------Q 00000001 Fourth bit field
 -Q------01000000 fifth bit field
 ----Q---00001000 6th bit field
 --Q-----00100000 7th bit field
 
 
  ======================
  Concept 2
  ======================
 
  Next, prepare three more bit fields to check the effect.
 
  1. What works well on the lower left: l
  2. What works right below: d
  3. Things that work in the lower right: r
 
 Next, consider the diagonal dominant hand.
  In the case of the above figure,
  The dominant muscle on the right of the first column is the third (0x08)
  The second line (0x04) is the dominant muscle on the upper right of the second column.
  This value is obtained by "shifting right" the position 0x10 of the 0th row queen by 1 bit
  can do.
  Also, in the case of the upper left diagonal, the fifth column (0x20) in the first column and the sixth column (0x40) in the second column
 It can be obtained by "shifting left" one bit at a time.
 
 In other words, representing the right shift r by r and the left shift l by l
 It is possible to find the effective power source by shifting r and l by 1 bit.
 
   * ---------------
   ...
   |... -3.. 0x02-|
   |.. -2... 0x04 | (1 B shift right r)
   .. -1... 0x08-|
   | Q... 0x 10 ← (the position of Q is 4 d)
   ... 0x20-|
   |.. +2... 0x40 | (1 B left shift l)
   |... +3.. 0x80-|
   * ---------------
   Figure: Diagonal dominant check
 
  When advancing the search from the nth bitfield to the n + 1th bitfield,
  Row the OR operation of the 3 bit fields of and the n th bit field (B)
  is. l shift one to the left, d unchanged, r shift one to the right
  Pass it to the n + 1st bit field search.
 
  l: (l | B) << 1
  r: (r | B) >> 1
  d: d | B
 
 
  ======================
  Way of thinking 3
  ======================
 
    In the search of the (n + 1) th bit field, these three bit fields are ORed
  Make a bit field and put it in the position where it is ON because it is a valid muscle.
  It will be the impossible position. Next, the bit obtained by ORing the three bit fields
  Inverts the tofield. In other words, "Bit
  Convert to And assuming that this arrangeable bit field is called BM,
  Try the following operation.
  
  B = -BM & BM; // Get the rightmost bit
  
    How can a negative value be used in a binary system in a computer to understand the meaning of this formula?
  You need to know what is being expressed in Try to represent negative values ​​in binary notation
  And will be as follows.
  
   00000011 3
   00000010 2
   00000001 1
   00000000 0
   11111111 -1
   11111110 -2
   11111101 -3
  
    When making positive value n into negative value -n, it is inverted after adding n to +1. And
  For example, if n = 22 and AND of n and -n, it will become as follows. when n is expressed in binary system
  The result is that only the lowest ON bit is extracted. Extremely easy operation
  It is important to realize 1 bit extraction by.
  
       00010110 22
   AND 11101010 -22
  --------------------
       00000010
  
    Well, if you write a while statement like the one below, this loop is the number of ON bits of BM.
  It will loop a number of times. There is no waste at all for every pattern that can be placed
  It will be generated.
  
  while (BM) {
      B = -BM & BM;
      BM ^ = B;
      // A placeable pattern is generated here one by one (B)
  }
 /


  Execution result
  N: Total Unique hh: mm: ss
  2: 0 0 00:00:00
  3: 0 0 00:00:00
  4: 2 1 00:00:00
  5: 10 2 00:00:00
  6: 4 1 00:00:00
  7: 40 6 00:00:00
  8: 92 12 00:00:00
  9: 352 46 00:00:00
 10: 724 92 00:00:00
 11: 2680 341 00:00:00
 12: 14200 1787 00:00:00
 13: 73712 9233 00:00:00
 14: 365596 45752 00:00: 02
 15: 2279184 285053 00:00: 13
 16: 14772512 1846955 00: 01: 24
 17: 95815104 11977939 00: 09: 05



 7. Backtrack + bitmap + symmetry cancellation method

Execution result

 N: Total Unique hh: mm: ss
 2: 0 0 00:00:00
 3: 0 0 00:00:00
 4: 2 1 00:00:00
 5: 10 2 00:00:00
 6: 4 1 00:00:00
 7: 40 6 00:00:00
 8: 92 12 00:00:00
 9: 352 46 00:00:00
10: 724 92 00:00:00
11: 2680 341 00:00:00
12: 14200 1787 00:00:00
13: 73712 9233 00:00:00
14: 365596 45752 00:00:05
15: 2279184 285053 00:00: 27
16: 14772512 1846955 00: 03: 12
17: 95815104 11977939 00: 23: 09

 8. Backtrack + Bitmap + Symmetry Cancellation + Pruning and Optimization

 	Execution result

 N: Total Unique hh: mm: ss
 2: 0 0 00:00:00
 3: 0 0 00:00:00
 4: 2 1 00:00:00
 5: 10 2 00:00:00
 6: 4 1 00:00:00
 7: 40 6 00:00:00
 8: 92 12 00:00:00
 9: 352 46 00:00:00
10: 724 92 00:00:00
11: 2680 341 00:00:00
12: 14200 1787 00:00:00
13: 73712 9233 00:00: 01
14: 365596 45752 00:00: 01
15: 2279184 285053 00:00: 10
16: 14772512 1846955 00: 01: 01
17: 95815104 11977939 00: 07: 33

 9. Backtrack + Bitmap + Unsymmetry + Pruning and Optimization + Symmetry Unpaired Bitmap + Sort by Queen Position (BOUND 1)

	Execution result

 N: Total Unique hh: mm: ss
 2: 0 0 00:00:00
 3: 0 0 00:00:00
 4: 2 1 00:00:00
 5: 10 2 00:00:00
 6: 4 1 00:00:00
 7: 40 6 00:00:00
 8: 92 12 00:00:00
 9: 352 46 00:00:00
10: 724 92 00:00:00
11: 2680 341 00:00:00
12: 14200 1787 00:00:00
13: 73712 9233 00:00:00
14: 365596 45752 00:00: 03
15: 2279184 285053 00:00: 15
16: 14772512 1846955 00: 01: 44
17: 95815104 11977939 00: 12: 20


 10. Backtrack + Bitmap + Unsymmetry + Pruning and Optimization + Symmetry Unpaired Bitmap + Sort by Queen Position (BOUND1 + BOUND2)

	Execution result

 N: Total Unique hh: mm: ss
 2: 0 0 00:00:00
 3: 0 0 00:00:00
 4: 2 1 00:00:00
 5: 10 2 00:00:00
 6: 4 1 00:00:00
 7: 40 6 00:00:00
 8: 92 12 00:00:00
 9: 352 46 00:00:00
10: 724 92 00:00:00
11: 2680 341 00:00:00
12: 14200 1787 00:00:00
13: 73712 9233 00:00:00
14: 365596 45752 00:00: 02
15: 2279184 285053 00:00: 16
16: 14772512 1846955 00: 01: 45
17: 95815104 11977939 00: 12: 18


 11. Backtrack + Bitmap + Unsymmetry + Pruning and Optimization + Symmetry Unpaired Bitmap + Sort by Queen Position (BOUND1 + BOUND2) + Pruning

	Execution result

 N: Total Unique hh: mm: ss
 2: 0 0 00:00:00
 3: 0 0 00:00:00
 4: 2 1 00:00:00
 5: 10 2 00:00:00
 6: 4 1 00:00:00
 7: 40 6 00:00:00
 8: 92 12 00:00:00
 9: 352 46 00:00:00
10: 724 92 00:00:00
11: 2680 341 00:00:00
12: 14200 1787 00:00:00
13: 73712 9233 00:00:00
14: 365596 45752 00:00: 01
15: 2279184 285053 00:00:04
16: 14772512 1846955 00:00:30
17: 95815104 11977939 00: 03: 32

 12. Backtrack + Bitmap + Unsymmetry + Pruning and Optimization + Unsymmetry Bitmap + Sort by Queen Position (BOUND1 + BOUND2) + Pruning + Optimization

	Execution result

 N: Total Unique hh: mm: ss
 2: 0 0 00:00:00
 3: 0 0 00:00:00
 4: 2 1 00:00:00
 5: 10 2 00:00:00
 6: 4 1 00:00:00
 7: 40 6 00:00:00
 8: 92 12 00:00:00
 9: 352 46 00:00:00
10: 724 92 00:00:00
11: 2680 341 00:00:00
12: 14200 1787 00:00:00
13: 73712 9233 00:00:00
14: 365596 45752 00:00:00
15: 2279184 285053 00:00: 03
16: 14772512 1846955 00:00:20
17: 95815104 11977939 00: 02: 13


