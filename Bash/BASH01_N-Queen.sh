#!/bin/bash

#
# アルゴリズムとデータ構造  
# 一般社団法人  共同通信社  情報技術局  鈴木  維一郎(suzuki.iichiro@kyodonews.jp)
#
#
# ---------------------------------------------------------------------------------
## 1. ブルートフォース　力任せ探索
#
#　全ての可能性のある解の候補を体系的に数え上げ、それぞれの解候補が問題の解と
#  なるかをチェックする方法
#  (※)各行に１個の王妃を配置する組み合わせを再帰的に列挙組み合わせを生成するだ
#  けであって8王妃問題を解いているわけではありません
# ---------------------------------------------------------------------------------
#
#  実行結果
#  :
#  :
#  16777209: 7 7 7 7 7 7 7 0
#  16777210: 7 7 7 7 7 7 7 1
#  16777211: 7 7 7 7 7 7 7 2
#  16777212: 7 7 7 7 7 7 7 3
#  16777213: 7 7 7 7 7 7 7 4
#  16777214: 7 7 7 7 7 7 7 5
#  16777215: 7 7 7 7 7 7 7 6
#  16777216: 7 7 7 7 7 7 7 7
#
COUNT=1 ; # グローバル変数は大文字
N-Queen1(){
  # ローカル変数は明示的に local をつけ、代入する場合は ""ダブルクォートが必要です。
  # -i は 変数の型が整数であることを示しています
  local -i min="$1";      # ひとつ目のパラメータ $1をminに代入
  local -i size="$2" ;    # ふたつ目のパラメータ $2をsizeに代入
  local -i i=0;           # 再帰するために forで使う変数も宣言が必要
  local -i j=0;
  # forはこういうＣ的な書き方のほうが見やすい
  for((i=0;i<size;i++)) { # (()) の中の変数に $ は不要です
    pos[$min]="$i" ;      # 代入する場合、posの前には$ は不要ですが、添え字には$が必要
    ((min==(size-1)))&&{  # わかりづらいですが、この文は if 文
      # echo -n は　行末で改行をしないオプション
      echo -n "$((COUNT++)): ";      # $((COUNT++))はCOUNTのインクリメント
      for((j=0;j<size;j++)){
        echo -n "${pos[j]} ";        # 配列変数を呼び出す場合は ${}をつけます
      }
      echo "" ;           # 改行を入れる
    # || パイプで繋いで処理を継続
    }||N-Queen1 "$((min+1))" "$size" ; # 再帰する場合は $((min++))ではなく $((min+1))
  }  
}
#
# 実行はコメントアウトを外して、 $ ./BASH_N-Queen.sh 
#
  echo "<>１．ブルートフォース（力まかせ探索） N-Queen1()";
  N-Queen1 0 8;
#
#
