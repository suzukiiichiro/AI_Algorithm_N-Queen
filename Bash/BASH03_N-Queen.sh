#!/bin/bash
#
#
# アルゴリズムとデータ構造  
# 一般社団法人  共同通信社  情報技術局  鈴木  維一郎(suzuki.iichiro@kyodonews.jp)
#
# ---------------------------------------------------------------------------------
##
# ３．バックトラック
#
# 　各列、対角線上にクイーンがあるかどうかのフラグを用意し、途中で制約を満た
# さない事が明らかな場合は、それ以降のパターン生成を行わない。
# 　各列、対角線上にクイーンがあるかどうかのフラグを用意することで高速化を図る。
# 　これまでは行方向と列方向に重複しない組み合わせを列挙するものですが、王妃
# は斜め方向のコマをとることができるので、どの斜めライン上にも王妃をひとつだ
# けしか配置できない制限を加える事により、深さ優先探索で全ての葉を訪問せず木
# を降りても解がないと判明した時点で木を引き返すということができます。
#
# ---------------------------------------------------------------------------------
#
# 実行結果
#
# N:        Total       Unique        hh:mm:ss
# 2:            0            0         0:00:00
# 3:            0            0         0:00:00
# 4:            2            0         0:00:00
# 5:           10            0         0:00:00
# 6:            4            0         0:00:00
# 7:           40            0         0:00:00
# 8:           92            0         0:00:01
# 9:          352            0         0:00:03
#10:          724            0         0:00:17
#11:         2680            0         0:01:23
#12:        14200            0         0:07:30
#
##
#
# グローバル変数は大文字
TOTAL=0;
UNIQUE=0;
typeset -a flag_a="";     # -a は配列の型を宣言します
typeset -a flag_b="";
typeset -a flag_c="";
N-Queen3_rec(){
  # ローカル変数は明示的に local をつけ、代入する場合は ""ダブルクォートが必要です。
  # -i は 変数の型が整数であることを示しています
  local -i min="$1";      # ひとつ目のパラメータ $1をminに代入
  local -i size=$2;       # ふたつ目のパラメータ $2をsizeに代入
  local -i i=0;           # 再帰するために forで使う変数も宣言が必要
  # forはこういうＣ的な書き方のほうが見やすい
  for((i=0;i<size;i++)){        # (()) の中の変数に $ は不要です 
    #わかりづらいですが、この文はif文 文字列比較の場合は [ ] を使います
    # 長い文章は \ （スペースバックスラッシュ）で改行することができます
    [ "${flag_a[$i]}" != "true"  ]&& \
    [ "${flag_b[$min+$i]}" != "true" ]&& \
    [ "${flag_c[$min-$i+$size-1]}" != "true" ]&&{ #この文はif文 文字列比較の場合は [ ] を使います
      pos[$min]=$i ;            # 代入する場合、posの前には$ は不要ですが、添え字には$が必要
      ((min==(size-1)))&&{      # (()) の中の変数に $ は不要です
        ((TOTAL++));            # ((TOTAL++))はTOTALのインクリメント (()) の中の変数に $ は不要です
      }||{                      # elseのはじまり                     
        flag_a[$i]="true" ;     # 配列の中の添え字には $ をつけます 
        flag_b[$min+$i]="true" ; 
        flag_c[$min-$i+$size-1]="true" ; 
        N-Queen3_rec "$((min+1))" "$size" ; # 再帰する場合は $((min++))ではなく $((min+1))
        flag_a[$i]="" ;           
        flag_b[$min+$i]="" ;   
        flag_c[$min-$i+$size-1]="" ; 
      }          
    }
  }  
}
#
N-Queen3(){
  local -i max=15;
  local -i min=2;
  local -i N="$min";
  local startTime=0;
	local endTime=0;
	local hh=mm=ss=0; 		# いっぺんにに初期化することもできます
  echo " N:        Total       Unique        hh:mm:ss" ;
  for((N=min;N<=max;N++)){
    TOTAL=0;      # Nが更新される度に TOTALとUNIQUEを初期化
    UNIQUE=0;
    startTime=`date +%s` ;      # 計測開始時間
    N-Queen3_rec 0 "$N";
		endTime=`date +%s`;					# 計測終了時間
		ss=`expr ${endTime} - ${startTime}` # hh:mm:ss 形式に変換
		hh=`expr ${ss} / 3600`
		ss=`expr ${ss} % 3600`
		mm=`expr ${ss} / 60`
		ss=`expr ${ss} % 60`
    printf "%2d:%13d%13d%10d:%.2d:%.2d\n" $N $TOTAL $UNIQUE $hh $mm $ss ;
  } 
}
#
# 実行はコメントアウトを外して、 $ ./BASH_N-Queen.sh 
#
  echo "<>３．バックトラック(BT) Queen3()";
  N-Queen3;
#
#
